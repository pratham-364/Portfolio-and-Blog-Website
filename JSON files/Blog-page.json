{"content":[{"id":"78558fd4","settings":{"content_width":{"unit":"px","size":1170,"sizes":[]},"gap":"no","eael_parallax_layers_list":[],"background_background":"classic","background_color":"#CFCFCF","background_image":{"id":527,"url":"http:\/\/pgsites.epizy.com\/wp-content\/uploads\/2021\/07\/398f1fc1-image-1.jpg"},"background_position":"center center","background_repeat":"no-repeat","background_size":"cover","background_overlay_background":"classic","background_overlay_color":"#03112C","padding":{"unit":"px","top":"130","right":"20","bottom":"0","left":"20","isLinked":false},"background_overlay_image":{"url":"http:\/\/pgsites.epizy.com\/wp-content\/uploads\/2021\/07\/Untitled.png","id":25},"background_attachment":"fixed","background_overlay_position":"initial","background_overlay_xpos":{"unit":"px","size":-70,"sizes":[]},"background_overlay_ypos":{"unit":"px","size":-90,"sizes":[]},"background_overlay_repeat":"repeat","background_overlay_opacity":{"unit":"px","size":0.4899999999999999911182158029987476766109466552734375,"sizes":[]},"css_filters_css_filter":"custom","css_filters_brightness":{"unit":"px","size":200,"sizes":[]},"css_filters_contrast":{"unit":"px","size":200,"sizes":[]},"css_filters_saturate":{"unit":"px","size":200,"sizes":[]},"css_filters_hue":{"unit":"px","size":360,"sizes":[]}},"elements":[{"id":"6976aae0","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"3bb59e59","settings":{"content_width":{"unit":"px","size":911,"sizes":[]},"gap":"no","eael_parallax_layers_list":[],"margin":{"unit":"px","top":"0","right":0,"bottom":"0","left":0,"isLinked":false},"padding":{"unit":"px","top":"0","right":"0","bottom":"110","left":"0","isLinked":false}},"elements":[{"id":"49d16d1a","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"637f19c8","settings":{"title":"Blogs","align":"center","title_color":"#FFFFFF","typography_typography":"custom","typography_font_family":"Amita","typography_font_size":{"unit":"px","size":90,"sizes":[]},"typography_font_weight":"700","typography_line_height":{"unit":"em","size":1.399999999999999911182158029987476766109466552734375,"sizes":[]},"eael_tooltip_section_content":"I am a tooltip","eael_ext_content_protection_password_placeholder":"Enter Password","eael_ext_content_protection_password_submit_btn_txt":"Submit","typography_font_size_tablet":{"unit":"px","size":70,"sizes":[]},"typography_font_size_mobile":{"unit":"px","size":40,"sizes":[]},"eael_ext_content_protection_password_incorrect_message":"Password does not match.","_margin":{"unit":"px","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"isInner":false,"widgetType":"heading","elType":"widget"}],"isInner":true,"elType":"column"}],"isInner":true,"elType":"section"},{"id":"2f6197bb","settings":{"layout":"full_width","gap":"wide","eael_parallax_layers_list":[],"structure":"30","background_background":"classic","margin":{"unit":"px","top":"0","right":0,"bottom":"-90","left":0,"isLinked":false},"z_index":1,"margin_tablet":{"unit":"px","top":"0","right":0,"bottom":"-66","left":0,"isLinked":false},"animation":"fadeInUp"},"elements":[{"id":"7d80cfce","settings":{"_column_size":33,"_inline_size":null,"padding_tablet":{"unit":"px","top":"10","right":"10","bottom":"10","left":"10","isLinked":true}},"elements":[],"isInner":true,"elType":"column"},{"id":"45ead699","settings":{"_column_size":33,"_inline_size":null,"padding_tablet":{"unit":"px","top":"10","right":"10","bottom":"10","left":"10","isLinked":true},"background_background":"classic"},"elements":[{"id":"364fbc41","settings":{"eael_infobox_img_or_icon":"img","eael_infobox_title":"By Pratham Gupta","eael_infobox_text":"","infobox_button_text":"Click Me!","eael_infobox_title_color":"#C4BD03","eael_infobox_title_typography_typography":"custom","eael_infobox_title_typography_font_family":"Amita","eael_infobox_title_typography_font_size":{"unit":"px","size":36,"sizes":[]},"eael_infobox_title_typography_font_weight":"700","eael_infobox_title_typography_line_height":{"unit":"em","size":1.3000000000000000444089209850062616169452667236328125,"sizes":[]},"eael_infobox_title_margin":{"unit":"px","top":"-3","right":"0","bottom":"-20","left":"0","isLinked":false},"eael_infobox_content_margin":{"unit":"px","top":"0","right":"0","bottom":"0","left":"0","isLinked":false},"eael_infobox_content_only_padding":{"unit":"px","top":"0","right":"0","bottom":"0","left":"0","isLinked":false},"eael_infobox_content_color":"#0D1832","eael_infobox_content_typography_hover_typography":"custom","eael_infobox_content_typography_hover_font_family":"DM Sans","eael_infobox_content_typography_hover_font_size":{"unit":"px","size":20,"sizes":[]},"eael_infobox_content_typography_hover_font_weight":"500","eael_infobox_content_typography_hover_line_height":{"unit":"em","size":1.3000000000000000444089209850062616169452667236328125,"sizes":[]},"_padding":{"unit":"px","top":"30","right":"30","bottom":"30","left":"30","isLinked":true},"eael_tooltip_section_content":"I am a tooltip","eael_ext_content_protection_password_placeholder":"Enter Password","eael_ext_content_protection_password_submit_btn_txt":"Submit","_background_background":"classic","_background_color":"#241C4E00","_border_radius":{"unit":"px","top":"10","right":"10","bottom":"10","left":"10","isLinked":true},"_box_shadow_box_shadow_type":"yes","_box_shadow_box_shadow":{"horizontal":0,"vertical":50,"blur":150,"spread":0,"color":"rgba(0, 3.9999999999999964, 22, 0.05)"},"eael_infobox_title_typography_font_size_tablet":{"unit":"px","size":26,"sizes":[]},"eael_infobox_content_typography_hover_font_size_tablet":{"unit":"px","size":18,"sizes":[]},"_padding_tablet":{"unit":"px","top":"20","right":"20","bottom":"20","left":"20","isLinked":true},"eael_ext_content_protection_password_incorrect_message":"Password does not match.","eael_infobox_image":{"id":534,"url":"http:\/\/pgsites.epizy.com\/wp-content\/uploads\/2021\/07\/51f43b95-c2b8-401e-89c3-bb9f0c2265ca.jpg"},"_background_image":{"url":"http:\/\/pgsites.epizy.com\/wp-content\/uploads\/2021\/07\/tuxpi.com_.1625491917-1.jpg","id":368},"eael_show_infobox_clickable":"yes","eael_show_infobox_clickable_link":{"url":"http:\/\/www.pgsites.epizy.com\/contacts\/","is_external":"","nofollow":"","custom_attributes":""},"eael_infobox_image_icon_padding":{"unit":"px","top":"0","right":"0","bottom":"0","left":"0","isLinked":true},"eael_infobox_image_border_border":"double","eael_infobox_image_border_width":{"unit":"px","top":"3","right":"3","bottom":"3","left":"3","isLinked":true},"eael_infobox_img_shape":"radius","eael_infobox_image_resizer":{"unit":"px","size":90,"sizes":[]},"thumbnail_size":"custom","thumbnail_custom_dimension":{"width":"80","height":"100"},"eael_infobox_img_margin":{"unit":"px","top":"-17","right":"1","bottom":"6","left":"1","isLinked":false},"_margin":{"unit":"px","top":"-13","right":"0","bottom":"-76","left":"0","isLinked":false}},"elements":[],"isInner":false,"widgetType":"eael-info-box","elType":"widget"}],"isInner":true,"elType":"column"},{"id":"48d174b9","settings":{"_column_size":33,"_inline_size":null,"padding_tablet":{"unit":"px","top":"10","right":"10","bottom":"10","left":"10","isLinked":true}},"elements":[],"isInner":true,"elType":"column"}],"isInner":true,"elType":"section"}],"isInner":false,"elType":"column"}],"isInner":false,"elType":"section"},{"id":"54fcecaf","settings":[],"elements":[{"id":"5d7dc2b6","settings":{"_column_size":100,"_inline_size":null},"elements":[],"isInner":false,"elType":"column"}],"isInner":false,"elType":"section"},{"id":"3622b8bd","settings":{"layout":"full_width"},"elements":[{"id":"4b0cd547","settings":{"_column_size":100,"_inline_size":null,"background_background":"gradient","background_color_b_stop":{"unit":"%","size":57,"sizes":[]},"background_gradient_angle":{"unit":"deg","size":260,"sizes":[]},"__globals__":{"background_color":"globals\/colors?id=c6504f8","background_color_b":"globals\/colors?id=4f1e39f"}},"elements":[{"id":"c20519a","settings":{"eael_dch_first_title":"How to grind Dynamic","eael_dch_last_title":" Programming","eael_dch_subtext":"<p><span style=\"text-decoration: underline;\">Some of the most common patterns I found in one of the most challenging topic, DP!<\/span><\/p>","eael_dch_base_title_color":"#063AF3","eael_dch_subtext_color":"#FFAFAF","_margin":{"unit":"px","top":"200","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"isInner":false,"widgetType":"eael-dual-color-header","elType":"widget"}],"isInner":false,"elType":"column"}],"isInner":false,"elType":"section"},{"id":"5dfda4a5","settings":[],"elements":[{"id":"50399024","settings":{"_column_size":100,"_inline_size":null,"background_background":"gradient","background_color_b_stop":{"unit":"%","size":72,"sizes":[]},"background_gradient_angle":{"unit":"deg","size":140,"sizes":[]},"__globals__":{"background_color":"globals\/colors?id=c6504f8","background_color_b":"globals\/colors?id=4f1e39f"}},"elements":[{"id":"43e83707","settings":{"editor":"<p><span style=\"color: #ccffcc;\">Dynamic Programming, also known as DP to humans, is one of the hardest topics in an interview prep. After solving ~140 problems in DP I have noticed that there are few patterns that can be found in different problems. So I did a research on that and find the following topics. Remember these are not the hard and fast approaches to solve problems but these patterns will definitely help a needy coder struggling in the topic.\u00a0<\/span><\/p><p><span style=\"color: #ccffcc;\">Following are the Patterns related to some known coding problems.<\/span><\/p><ol><li><span style=\"color: #ccffff;\"><a style=\"color: #ccffff;\" href=\"http:\/\/pgsites.epizy.com\/blogs\/#min-max\" rel=\"ugc\">Minimum (Maximum) Path to Reach a Target<\/a><\/span><\/li><li><span style=\"color: #ccffff;\"><a style=\"color: #ccffff;\" href=\"https:\/\/leetcode.com\/discuss\/general-discussion\/458695\/dynamic-programming-patterns#distinct-ways\" rel=\"ugc\">Distinct Ways<\/a><\/span><\/li><li><span style=\"color: #ccffff;\"><a style=\"color: #ccffff;\" href=\"https:\/\/leetcode.com\/discuss\/general-discussion\/458695\/dynamic-programming-patterns#Merging-Intervals\" rel=\"ugc\">Merging Intervals<\/a><\/span><\/li><li><span style=\"color: #ccffff;\"><a style=\"color: #ccffff;\" href=\"https:\/\/leetcode.com\/discuss\/general-discussion\/458695\/dynamic-programming-patterns#DP-on-Strings\" rel=\"ugc\">DP on Strings<\/a><\/span><\/li><li><span style=\"color: #ccffff;\"><a style=\"color: #ccffff;\" href=\"https:\/\/leetcode.com\/discuss\/general-discussion\/458695\/dynamic-programming-patterns#Decision-Making\" rel=\"ugc\">Decision Making<\/a><\/span><\/li><\/ol>"},"elements":[],"isInner":false,"widgetType":"text-editor","elType":"widget"},{"id":"4f549dc3","settings":{"editor":"<p><span style=\"color: #99ccff;\"><span style=\"font-size: 17.6px;\"><b><u>Minimum\/Maximum Path To Reach\u00a0 A Target<\/u><\/b><\/span><\/span><\/p><p><em><span style=\"color: #ff6600;\">Problem list:\u00a0<a style=\"color: #ff6600; text-decoration: underline;\" href=\"https:\/\/leetcode.com\/list\/55ac4kuc\" rel=\"ugc\">https:\/\/leetcode.com\/list\/55ac4kuc<\/a><\/span><\/em><\/p><p><span style=\"color: #ccffff;\">General problem statement for this pattern --&gt;<\/span><\/p><blockquote><h5><span style=\"color: #99ccff;\">Given a target find minimum (maximum) cost \/ path \/ sum to reach the target.<\/span><\/h5><\/blockquote><p><span style=\"color: #ccffff;\">Approach --&gt;<\/span><\/p><blockquote><p><span style=\"color: #99ccff;\">Choose minimum (maximum) path among all possible paths before the current state, then add value for the current state.<\/span><\/p><\/blockquote><pre><code>routes[i] = min(routes[i-1], routes[i-2], ... , routes[i-k]) + cost[i]\n<\/code><\/pre><p><span style=\"color: #ccffff;\">Generate optimal solutions for all values in the target and return the value for the target.<\/span><\/p><h4><span style=\"color: #ff6600;\">Top-Down<\/span><\/h4><pre><code><span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> j = <span class=\"hljs-number\">0<\/span>; j &lt; ways.size(); ++j) {\n    result = min(result, topDown(target - ways[j]) + cost\/ path \/ sum);\n}\n<span class=\"hljs-keyword\">return<\/span> memo[<span class=\"hljs-comment\">\/*state parameters*\/<\/span>] = result;\n<\/code><\/pre><h4><span style=\"color: #ff6600;\">Bottom-Up<\/span><\/h4><pre><code><span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> i = <span class=\"hljs-number\">1<\/span>; i &lt;= target; ++i) {\n   <span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> j = <span class=\"hljs-number\">0<\/span>; j &lt; ways.size(); ++j) {\n       <span class=\"hljs-keyword\">if<\/span> (ways[j] &lt;= i) {\n           dp[i] = min(dp[i], dp[i - ways[j]] + cost \/ path \/ sum) ;\n       }\n   }\n}\n \n<span class=\"hljs-keyword\">return<\/span> dp[target]\n<\/code><\/pre><h3>\u00a0<\/h3><h3><span style=\"text-decoration: underline;\"><span style=\"color: #ff6600; text-decoration: underline;\">Similar Problems<\/span><\/span><\/h3><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/min-cost-climbing-stairs\/\" rel=\"ugc\">746. Min Cost Climbing Stairs<\/a>\u00a0<code>Easy<\/code><\/span><\/p><h4><span style=\"color: #ff6600;\">Top-Down<\/span><\/h4><pre><code><span class=\"hljs-keyword\">int<\/span> result = min(minCost(n<span class=\"hljs-number\">-1<\/span>, cost, memo), minCost(n<span class=\"hljs-number\">-2<\/span>, cost, memo)) + (n == cost.size() ? <span class=\"hljs-number\">0<\/span> : cost[n]);\n<span class=\"hljs-keyword\">return<\/span> memo[n] = result;\n<\/code><\/pre><h4><span style=\"color: #ff6600;\">Bottom-Up<\/span><\/h4><pre><code><span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> i = <span class=\"hljs-number\">2<\/span>; i &lt;= n; ++i) {\n   dp[i] = min(dp[i<span class=\"hljs-number\">-1<\/span>], dp[i<span class=\"hljs-number\">-2<\/span>]) + (i == n ? <span class=\"hljs-number\">0<\/span> : cost[i]);\n}\n \n<span class=\"hljs-keyword\">return<\/span> dp[n]\n<\/code><\/pre><p>\u00a0<\/p><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/minimum-path-sum\/\" rel=\"ugc\">64. Minimum Path Sum<\/a>\u00a0<code>Medium<\/code><\/span><\/p><h4><span style=\"color: #ff6600;\">Top-Down<\/span><\/h4><pre><code><span class=\"hljs-keyword\">int<\/span> result = min(pathSum(i+<span class=\"hljs-number\">1<\/span>, j, grid, memo), pathSum(i, j+<span class=\"hljs-number\">1<\/span>, grid, memo)) + grid[i][j];\n    \n<span class=\"hljs-keyword\">return<\/span> memo[i][j] = result;\n<\/code><\/pre><h4><span style=\"color: #ff6600;\">Bottom-Up<\/span><\/h4><pre><code><span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> i = <span class=\"hljs-number\">1<\/span>; i &lt; n; ++i) {\n   <span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> j = <span class=\"hljs-number\">1<\/span>; j &lt; m; ++j) {\n       grid[i][j] = min(grid[i<span class=\"hljs-number\">-1<\/span>][j], grid[i][j<span class=\"hljs-number\">-1<\/span>]) + grid[i][j];\n   }\n}\n \n<span class=\"hljs-keyword\">return<\/span> grid[n<span class=\"hljs-number\">-1<\/span>][m<span class=\"hljs-number\">-1<\/span>]\n<\/code><\/pre><p>\u00a0<\/p><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/coin-change\/\" rel=\"ugc\">322. Coin Change<\/a>\u00a0<code>Medium<\/code><\/span><\/p><h4><span style=\"color: #ff6600;\">Top-Down<\/span><\/h4><pre><code><span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> i = <span class=\"hljs-number\">0<\/span>; i &lt; coins.size(); ++i) {\n    <span class=\"hljs-keyword\">if<\/span> (coins[i] &lt;= target) { <span class=\"hljs-comment\">\/\/ check validity of a sub-problem<\/span>\n        result = min(ans, CoinChange(target - coins[i], coins) + <span class=\"hljs-number\">1<\/span>);\n    }\n}\n<span class=\"hljs-keyword\">return<\/span> memo[target] = result;\n<\/code><\/pre><h4><span style=\"color: #ff6600;\">Bottom-Up<\/span><\/h4><pre><code><span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> j = <span class=\"hljs-number\">1<\/span>; j &lt;= amount; ++j) {\n   <span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> i = <span class=\"hljs-number\">0<\/span>; i &lt; coins.size(); ++i) {\n       <span class=\"hljs-keyword\">if<\/span> (coins[i] &lt;= j) {\n           dp[j] = min(dp[j], dp[j - coins[i]] + <span class=\"hljs-number\">1<\/span>);\n       }\n   }\n}\n<\/code><\/pre><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/minimum-falling-path-sum\/\" rel=\"ugc\">931. Minimum Falling Path Sum<\/a>\u00a0<code>Medium<\/code><\/span><\/p><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/minimum-cost-for-tickets\/\" rel=\"ugc\">983. Minimum Cost For Tickets<\/a>\u00a0<code>Medium<\/code><\/span><\/p><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/2-keys-keyboard\/\" rel=\"ugc\">650. 2 Keys Keyboard<\/a>\u00a0<code>Medium<\/code><\/span><\/p><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/perfect-squares\/\" rel=\"ugc\">279. Perfect Squares<\/a>\u00a0<code>Medium<\/code><\/span><\/p><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/last-stone-weight-ii\/\" rel=\"ugc\">1049. Last Stone Weight II<\/a>\u00a0<code>Medium<\/code><\/span><\/p><p>\u00a0<\/p>"},"elements":[],"isInner":false,"widgetType":"text-editor","elType":"widget"},{"id":"17ac4286","settings":{"editor":"<h4><span style=\"text-decoration: underline; color: #99ccff;\"><strong>Distinct Ways<\/strong><\/span><\/h4><p><span style=\"color: #ff6600;\">Problem List:\u00a0<a style=\"color: #ff6600;\" href=\"https:\/\/leetcode.com\/list\/55ajm50i\" rel=\"ugc\">https:\/\/leetcode.com\/list\/55ajm50i<\/a><\/span><\/p><p><span style=\"color: #ccffcc;\">Generate problem statement for this pattern<\/span><\/p><blockquote><p><span style=\"color: #ccffff;\">Given a target find a number of distinct ways to reach the target.<\/span><\/p><\/blockquote><h3><span style=\"color: #ccffcc;\">Approach<\/span><\/h3><blockquote><p><span style=\"color: #ccffff;\">Sum all possible ways to reach the current state.<\/span><\/p><\/blockquote><pre><code>routes[i] = routes[i<span class=\"hljs-number\">-1<\/span>] + routes[i<span class=\"hljs-number\">-2<\/span>], ... , + routes[i-k]\n<\/code><\/pre><p><span style=\"color: #ccffcc;\">Generate sum for all values in the target and return the value for the target.<\/span><\/p><h4><span style=\"color: #ff6600;\">Top-Down<\/span><\/h4><pre><code><span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> j = <span class=\"hljs-number\">0<\/span>; j &lt; ways.size(); ++j) {\n    result += topDown(target - ways[j]);\n}\n<span class=\"hljs-keyword\">return<\/span> memo[<span class=\"hljs-comment\">\/*state parameters*\/<\/span>] = result;\n<\/code><\/pre><h4><span style=\"color: #ff6600;\">Bottom-Up<\/span><\/h4><pre><code><span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> i = <span class=\"hljs-number\">1<\/span>; i &lt;= target; ++i) {\n   <span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> j = <span class=\"hljs-number\">0<\/span>; j &lt; ways.size(); ++j) {\n       <span class=\"hljs-keyword\">if<\/span> (ways[j] &lt;= i) {\n           dp[i] += dp[i - ways[j]];\n       }\n   }\n}\n \n<span class=\"hljs-keyword\">return<\/span> dp[target]\n<\/code><\/pre><h3><span style=\"text-decoration: underline; color: #ff6600;\">Similar Problems<\/span><\/h3><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/climbing-stairs\/\" rel=\"ugc\">70. Climbing Stairs<\/a>\u00a0<code>Easy<\/code><\/span><\/p><h4><span style=\"color: #ff6600;\">Top-Down<\/span><\/h4><pre><code><span class=\"hljs-keyword\">int<\/span> result = climbStairs(n<span class=\"hljs-number\">-1<\/span>, memo) + climbStairs(n<span class=\"hljs-number\">-2<\/span>, memo); \n    \n<span class=\"hljs-keyword\">return<\/span> memo[n] = result;\n<\/code><\/pre><h4><span style=\"color: #ff6600;\">Bottom-Up<\/span><\/h4><pre><code><span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> stair = <span class=\"hljs-number\">2<\/span>; stair &lt;= n; ++stair) {\n   <span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> step = <span class=\"hljs-number\">1<\/span>; step &lt;= <span class=\"hljs-number\">2<\/span>; ++step) {\n       dp[stair] += dp[stair-step];   \n   }\n}\n<\/code><\/pre><p>\u00a0<\/p><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/unique-paths\/\" rel=\"ugc\">62. Unique Paths<\/a>\u00a0<code>Medium<\/code><\/span><\/p><h4><span style=\"color: #ff6600;\">Top-Down<\/span><\/h4><pre><code><span class=\"hljs-keyword\">int<\/span> result = UniquePaths(x<span class=\"hljs-number\">-1<\/span>, y) + UniquePaths(x, y<span class=\"hljs-number\">-1<\/span>);\n\n<span class=\"hljs-keyword\">return<\/span> memo[x][y] = result;\n<\/code><\/pre><h4><span style=\"color: #ff6600;\">Bottom-Up<\/span><\/h4><pre><code><span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> i = <span class=\"hljs-number\">1<\/span>; i &lt; m; ++i) {\n   <span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> j = <span class=\"hljs-number\">1<\/span>; j &lt; n; ++j) {\n       dp[i][j] = dp[i][j<span class=\"hljs-number\">-1<\/span>] + dp[i<span class=\"hljs-number\">-1<\/span>][j];\n   }\n}\n<\/code><\/pre><p>\u00a0<\/p><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/number-of-dice-rolls-with-target-sum\/\" rel=\"ugc\">1155. Number of Dice Rolls With Target Sum<\/a>\u00a0<code>Medium<\/code><\/span><\/p><pre><code><span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> rep = <span class=\"hljs-number\">1<\/span>; rep &lt;= d; ++rep) {\n   <span class=\"hljs-function\"><span class=\"hljs-built_in\">vector<\/span>&lt;<span class=\"hljs-keyword\">int<\/span>&gt; <span class=\"hljs-title\">new_ways<\/span><span class=\"hljs-params\">(target+<span class=\"hljs-number\">1<\/span>)<\/span><\/span>;\n   <span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> already = <span class=\"hljs-number\">0<\/span>; already &lt;= target; ++already) {\n       <span class=\"hljs-keyword\">for<\/span> (<span class=\"hljs-keyword\">int<\/span> pipe = <span class=\"hljs-number\">1<\/span>; pipe &lt;= f; ++pipe) {\n           <span class=\"hljs-keyword\">if<\/span> (already - pipe &gt;= <span class=\"hljs-number\">0<\/span>) {\n               new_ways[already] += ways[already - pipe];\n               new_ways[already] %= mod;\n           }\n       }\n   }\n   ways = new_ways;\n}\n<\/code><\/pre><p><span style=\"color: #339966;\"><em><strong>Note --&gt; <\/strong><\/em><\/span><span style=\"color: #339966;\"><em>Some questions point out the number of repetitions, in that case, add one more loop to simulate every repetition.<\/em><\/span><\/p><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/knight-probability-in-chessboard\/\" rel=\"ugc\">688. Knight Probability in Chessboard<\/a>\u00a0<code>Medium<\/code><\/span><\/p><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/target-sum\/\" rel=\"ugc\">494. Target Sum<\/a>\u00a0<code>Medium<\/code><\/span><\/p><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/combination-sum-iv\/\" rel=\"ugc\">377. Combination Sum IV<\/a>\u00a0<code>Medium<\/code><\/span><\/p><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/knight-dialer\/\" rel=\"ugc\">935. Knight Dialer<\/a>\u00a0<code>Medium<\/code><\/span><\/p><p><span style=\"color: #ffcc00;\"><a style=\"color: #ffcc00;\" href=\"https:\/\/leetcode.com\/problems\/dice-roll-simulation\/\" rel=\"ugc\">1223. Dice Roll Simulation<\/a>\u00a0<code>Medium<\/code><\/span><\/p>"},"elements":[],"isInner":false,"widgetType":"text-editor","elType":"widget"}],"isInner":false,"elType":"column"}],"isInner":false,"elType":"section"}],"page_settings":{"eael_ext_toc_title":"Table of Contents"},"version":"0.4","title":"Blog-Page-sub","type":"page"}